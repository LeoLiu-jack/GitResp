<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test1">
    <!--namespace:命名空间，类似包结构
            不同的mapper映射文件使用namespace来做区分
            不同的mapper映射文件所使用的namespace的命名不允许出现重复
        使用命名空间.sqlId的形式来找到我们想要执行的sql语句-->
    <!--sql语句必须要写在相应的标签当中
        <insert>：在标签对中写insert开头的sql语句，处理的是添加操作
        <select>：在标签对中写select开头的sql语句，处理的是查询操作
        <update>：在标签对中写update开头的sql语句，处理的是更新操作
        <delete>：在标签对中写delete开头的sql语句，处理的是删除操作
        parameterType:为sql语句传递的参数的类型
        -->
    <select id="getById" parameterType="java.lang.String" resultType="com.Student">
     select * from tbl_student where id = #{id}
     </select>
    <!--如果返回的是多条记录，那么resultType返回值类型，应该写为集合的泛型-->
    <select id="getAll" resultType="com.Student">
        select * from tbl_student
    </select>

    <!--注意：
        在未来实际项目开发中
        所有的biao'qian都要写id属性
        <select>标签parameterType可以省略不写，resultType属性必须要写
        <insert>、<update>、<delete>这些标签通常我们只写id属性，其他属性一概不写
        -->
    <insert id="save">
        insert into tbl_student (id,name,age) values (#{id},#{name},#{age});
    </insert>
    
    <update id="update">
        update tbl_student set name=#{name},age=#{age} where id=#{id};
    </update>

    <delete id="delete">
        delete from tbl_student where id=#{id};
    </delete>
</mapper>